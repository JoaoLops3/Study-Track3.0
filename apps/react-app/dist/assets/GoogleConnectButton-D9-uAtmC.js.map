{"version":3,"file":"GoogleConnectButton-D9-uAtmC.js","sources":["../../../../node_modules/lucide-react/dist/esm/icons/clock.js","../../src/components/integrations/GoogleConnectButton.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Clock = createLucideIcon(\"Clock\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"polyline\", { points: \"12 6 12 12 16 14\", key: \"68esgv\" }]\n]);\n\nexport { Clock as default };\n//# sourceMappingURL=clock.js.map\n","import { useState } from 'react';\r\nimport { LogIn, LogOut } from 'lucide-react';\r\nimport { useSettings } from '../../contexts/SettingsContext';\r\nimport { supabase } from '../../lib/supabase';\r\nimport { toast } from 'react-hot-toast';\r\n\r\ninterface GoogleConnectButtonProps {\r\n  variant?: 'primary' | 'secondary';\r\n  onSuccess?: () => void;\r\n  onError?: () => void;\r\n}\r\n\r\nexport const GoogleConnectButton = ({\r\n  variant = 'primary',\r\n  onSuccess,\r\n  onError\r\n}: GoogleConnectButtonProps) => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  const handleConnect = async () => {\r\n    try {\r\n      setIsConnecting(true);\r\n      const { data, error } = await supabase.auth.signInWithOAuth({\r\n        provider: 'google',\r\n        options: {\r\n          redirectTo: `${window.location.origin}/calendar`,\r\n          scopes: 'https://www.googleapis.com/auth/calendar.readonly'\r\n        }\r\n      });\r\n      if (error) throw error;\r\n      if (data.url) window.location.href = data.url;\r\n      onSuccess?.();\r\n    } catch (error) {\r\n      console.error('Erro ao conectar com Google:', error);\r\n      toast.error('Erro ao conectar com Google');\r\n      onError?.();\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const handleDisconnect = async () => {\r\n    try {\r\n      setIsConnecting(true);\r\n      await updateSettings({\r\n        integrations: {\r\n          ...settings.integrations,\r\n          google: false\r\n        }\r\n      });\r\n      // Limpar token do Google dos metadados do usu√°rio\r\n      const { error } = await supabase.auth.updateUser({\r\n        data: {\r\n          google_token: null,\r\n          google_user: null\r\n        }\r\n      });\r\n      await supabase.auth.refreshSession();\r\n      if (error) throw error;\r\n      toast.success('Conta do Google desconectada com sucesso');\r\n      onSuccess?.();\r\n    } catch (error) {\r\n      console.error('Erro ao desconectar Google:', error);\r\n      toast.error('Erro ao desconectar Google');\r\n      onError?.();\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const buttonClasses = {\r\n    primary: 'inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed',\r\n    secondary: 'px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200 bg-primary-100 text-primary-700 hover:bg-primary-200 dark:bg-primary-900/30 dark:text-primary-400 dark:hover:bg-primary-900/50'\r\n  };\r\n\r\n  if (settings.integrations.google) {\r\n    return (\r\n      <button\r\n        onClick={handleDisconnect}\r\n        disabled={isConnecting}\r\n        className={buttonClasses[variant]}\r\n      >\r\n        <LogOut className=\"w-5 h-5 mr-2\" />\r\n        {isConnecting ? 'Desconectando...' : 'Desconectar Google'}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={handleConnect}\r\n      disabled={isConnecting}\r\n      className={buttonClasses[variant]}\r\n    >\r\n      <LogIn className=\"w-5 h-5 mr-2\" />\r\n      {isConnecting ? 'Conectando...' : 'Conectar Google'}\r\n    </button>\r\n  );\r\n}; "],"names":["Clock","createLucideIcon","GoogleConnectButton","variant","onSuccess","onError","settings","updateSettings","useSettings","isConnecting","setIsConnecting","useState","handleConnect","data","error","supabase","toast","handleDisconnect","buttonClasses","jsxs","jsx","LogOut","LogIn"],"mappings":"2HAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASK,MAACA,EAAQC,EAAiB,QAAS,CACtC,CAAC,SAAU,CAAE,GAAI,KAAM,GAAI,KAAM,EAAG,KAAM,IAAK,SAAU,EACzD,CAAC,WAAY,CAAE,OAAQ,mBAAoB,IAAK,QAAU,CAAA,CAC5D,CAAC,ECAYC,EAAsB,CAAC,CAClC,QAAAC,EAAU,UACV,UAAAC,EACA,QAAAC,CACF,IAAgC,CAC9B,KAAM,CAAE,SAAAC,EAAU,eAAAC,CAAe,EAAIC,EAAY,EAC3C,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAS,EAAK,EAEhDC,EAAgB,SAAY,CAC5B,GAAA,CACFF,EAAgB,EAAI,EACpB,KAAM,CAAE,KAAAG,EAAM,MAAAC,CAAA,EAAU,MAAMC,EAAS,KAAK,gBAAgB,CAC1D,SAAU,SACV,QAAS,CACP,WAAY,GAAG,OAAO,SAAS,MAAM,YACrC,OAAQ,mDAAA,CACV,CACD,EACD,GAAID,EAAa,MAAAA,EACbD,EAAK,MAAY,OAAA,SAAS,KAAOA,EAAK,KAC9BT,GAAA,MAAAA,UACLU,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EACnDE,EAAM,MAAM,6BAA6B,EAC/BX,GAAA,MAAAA,GAAA,QACV,CACAK,EAAgB,EAAK,CAAA,CAEzB,EAEMO,EAAmB,SAAY,CAC/B,GAAA,CACFP,EAAgB,EAAI,EACpB,MAAMH,EAAe,CACnB,aAAc,CACZ,GAAGD,EAAS,aACZ,OAAQ,EAAA,CACV,CACD,EAED,KAAM,CAAE,MAAAQ,CAAM,EAAI,MAAMC,EAAS,KAAK,WAAW,CAC/C,KAAM,CACJ,aAAc,KACd,YAAa,IAAA,CACf,CACD,EAED,GADM,MAAAA,EAAS,KAAK,eAAe,EAC/BD,EAAa,MAAAA,EACjBE,EAAM,QAAQ,0CAA0C,EAC5CZ,GAAA,MAAAA,UACLU,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDE,EAAM,MAAM,4BAA4B,EAC9BX,GAAA,MAAAA,GAAA,QACV,CACAK,EAAgB,EAAK,CAAA,CAEzB,EAEMQ,EAAgB,CACpB,QAAS,kRACT,UAAW,wMACb,EAEI,OAAAZ,EAAS,aAAa,OAEtBa,EAAA,KAAC,SAAA,CACC,QAASF,EACT,SAAUR,EACV,UAAWS,EAAcf,CAAO,EAEhC,SAAA,CAACiB,EAAAA,IAAAC,EAAA,CAAO,UAAU,cAAe,CAAA,EAChCZ,EAAe,mBAAqB,oBAAA,CAAA,CACvC,EAKFU,EAAA,KAAC,SAAA,CACC,QAASP,EACT,SAAUH,EACV,UAAWS,EAAcf,CAAO,EAEhC,SAAA,CAACiB,EAAAA,IAAAE,EAAA,CAAM,UAAU,cAAe,CAAA,EAC/Bb,EAAe,gBAAkB,iBAAA,CAAA,CACpC,CAEJ","x_google_ignoreList":[0]}